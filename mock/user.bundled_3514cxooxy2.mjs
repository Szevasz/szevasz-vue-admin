// mock/user.ts
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "111111",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "111111",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/api/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/api/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
export {
  user_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay91c2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIi9Vc2Vycy9zemV2YXN6L0Rlc2t0b3AvVnVlL3Z1ZTMtYWRtaW4tdGVtcGxhdGUvcHJvamVjdC9tb2NrL3VzZXIudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiL1VzZXJzL3N6ZXZhc3ovRGVza3RvcC9WdWUvdnVlMy1hZG1pbi10ZW1wbGF0ZS9wcm9qZWN0L21vY2tcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL1VzZXJzL3N6ZXZhc3ovRGVza3RvcC9WdWUvdnVlMy1hZG1pbi10ZW1wbGF0ZS9wcm9qZWN0L21vY2svdXNlci50c1wiOy8vXHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU2NTcwXHU2MzZFXG5mdW5jdGlvbiBjcmVhdGVVc2VyTGlzdCgpIHtcbiAgcmV0dXJuIFtcbiAgICB7XG4gICAgICB1c2VySWQ6IDEsXG4gICAgICBhdmF0YXI6XG4gICAgICAgICdodHRwczovL3dwaW1nLndhbGxzdGNuLmNvbS9mNzc4NzM4Yy1lNGY4LTQ4NzAtYjYzNC01NjcwM2I0YWNhZmUuZ2lmJyxcbiAgICAgIHVzZXJuYW1lOiAnYWRtaW4nLFxuICAgICAgcGFzc3dvcmQ6ICcxMTExMTEnLFxuICAgICAgZGVzYzogJ1x1NUU3M1x1NTNGMFx1N0JBMVx1NzQwNlx1NTQ1OCcsXG4gICAgICByb2xlczogWydcdTVFNzNcdTUzRjBcdTdCQTFcdTc0MDZcdTU0NTgnXSxcbiAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJ10sXG4gICAgICByb3V0ZXM6IFsnaG9tZSddLFxuICAgICAgdG9rZW46ICdBZG1pbiBUb2tlbicsXG4gICAgfSxcbiAgICB7XG4gICAgICB1c2VySWQ6IDIsXG4gICAgICBhdmF0YXI6XG4gICAgICAgICdodHRwczovL3dwaW1nLndhbGxzdGNuLmNvbS9mNzc4NzM4Yy1lNGY4LTQ4NzAtYjYzNC01NjcwM2I0YWNhZmUuZ2lmJyxcbiAgICAgIHVzZXJuYW1lOiAnc3lzdGVtJyxcbiAgICAgIHBhc3N3b3JkOiAnMTExMTExJyxcbiAgICAgIGRlc2M6ICdcdTdDRkJcdTdFREZcdTdCQTFcdTc0MDZcdTU0NTgnLFxuICAgICAgcm9sZXM6IFsnXHU3Q0ZCXHU3RURGXHU3QkExXHU3NDA2XHU1NDU4J10sXG4gICAgICBidXR0b25zOiBbJ2N1c2VyLmRldGFpbCcsICdjdXNlci51c2VyJ10sXG4gICAgICByb3V0ZXM6IFsnaG9tZSddLFxuICAgICAgdG9rZW46ICdTeXN0ZW0gVG9rZW4nLFxuICAgIH0sXG4gIF1cbn1cblxuZXhwb3J0IGRlZmF1bHQgW1xuICAvLyBcdTc1MjhcdTYyMzdcdTc2N0JcdTVGNTVcdTYzQTVcdTUzRTNcbiAge1xuICAgIHVybDogJy9hcGkvdXNlci9sb2dpbicsIC8vXHU4QkY3XHU2QzQyXHU1NzMwXHU1NzQwXG4gICAgbWV0aG9kOiAncG9zdCcsIC8vXHU4QkY3XHU2QzQyXHU2NUI5XHU1RjBGXG4gICAgcmVzcG9uc2U6ICh7IGJvZHkgfSkgPT4ge1xuICAgICAgLy9cdTgzQjdcdTUzRDZcdThCRjdcdTZDNDJcdTRGNTNcdTY0M0FcdTVFMjZcdThGQzdcdTY3NjVcdTc2ODRcdTc1MjhcdTYyMzdcdTU0MERcdTRFMEVcdTVCQzZcdTc4MDFcbiAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSBib2R5XG4gICAgICAvL1x1OEMwM1x1NzUyOFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTFGRFx1NjU3MCxcdTc1MjhcdTRFOEVcdTUyMjRcdTY1QURcdTY2MkZcdTU0MjZcdTY3MDlcdTZCNjRcdTc1MjhcdTYyMzdcbiAgICAgIGNvbnN0IGNoZWNrVXNlciA9IGNyZWF0ZVVzZXJMaXN0KCkuZmluZChcbiAgICAgICAgKGl0ZW0pID0+IGl0ZW0udXNlcm5hbWUgPT09IHVzZXJuYW1lICYmIGl0ZW0ucGFzc3dvcmQgPT09IHBhc3N3b3JkLFxuICAgICAgKVxuICAgICAgLy9cdTZDQTFcdTY3MDlcdTc1MjhcdTYyMzdcdThGRDRcdTU2REVcdTU5MzFcdThEMjVcdTRGRTFcdTYwNkZcbiAgICAgIGlmICghY2hlY2tVc2VyKSB7XG4gICAgICAgIHJldHVybiB7IGNvZGU6IDIwMSwgZGF0YTogeyBtZXNzYWdlOiAnXHU4RDI2XHU1M0Y3XHU2MjE2XHU4MDA1XHU1QkM2XHU3ODAxXHU0RTBEXHU2QjYzXHU3ODZFJyB9IH1cbiAgICAgIH1cbiAgICAgIC8vXHU1OTgyXHU2NzlDXHU2NzA5XHU4RkQ0XHU1NkRFXHU2MjEwXHU1MjlGXHU0RkUxXHU2MDZGXG4gICAgICBjb25zdCB7IHRva2VuIH0gPSBjaGVja1VzZXJcbiAgICAgIHJldHVybiB7IGNvZGU6IDIwMCwgZGF0YTogeyB0b2tlbiB9IH1cbiAgICB9LFxuICB9LFxuICAvLyBcdTgzQjdcdTUzRDZcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcbiAge1xuICAgIHVybDogJy9hcGkvdXNlci9pbmZvJyxcbiAgICBtZXRob2Q6ICdnZXQnLFxuICAgIHJlc3BvbnNlOiAocmVxdWVzdCkgPT4ge1xuICAgICAgLy9cdTgzQjdcdTUzRDZcdThCRjdcdTZDNDJcdTU5MzRcdTY0M0FcdTVFMjZ0b2tlblxuICAgICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmhlYWRlcnMudG9rZW5cbiAgICAgIC8vXHU2N0U1XHU3NzBCXHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU2NjJGXHU1NDI2XHU1MzA1XHU1NDJCXHU2NzA5XHU2QjIxdG9rZW5cdTc1MjhcdTYyMzdcbiAgICAgIGNvbnN0IGNoZWNrVXNlciA9IGNyZWF0ZVVzZXJMaXN0KCkuZmluZCgoaXRlbSkgPT4gaXRlbS50b2tlbiA9PT0gdG9rZW4pXG4gICAgICAvL1x1NkNBMVx1NjcwOVx1OEZENFx1NTZERVx1NTkzMVx1OEQyNVx1NzY4NFx1NEZFMVx1NjA2RlxuICAgICAgaWYgKCFjaGVja1VzZXIpIHtcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAxLCBkYXRhOiB7IG1lc3NhZ2U6ICdcdTgzQjdcdTUzRDZcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTU5MzFcdThEMjUnIH0gfVxuICAgICAgfVxuICAgICAgLy9cdTU5ODJcdTY3OUNcdTY3MDlcdThGRDRcdTU2REVcdTYyMTBcdTUyOUZcdTRGRTFcdTYwNkZcbiAgICAgIHJldHVybiB7IGNvZGU6IDIwMCwgZGF0YTogeyBjaGVja1VzZXIgfSB9XG4gICAgfSxcbiAgfSxcbl1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFDQSxTQUFTLGlCQUFpQjtBQUN4QixTQUFPO0FBQUEsSUFDTDtBQUFBLE1BQ0UsUUFBUTtBQUFBLE1BQ1IsUUFDRTtBQUFBLE1BQ0YsVUFBVTtBQUFBLE1BQ1YsVUFBVTtBQUFBLE1BQ1YsTUFBTTtBQUFBLE1BQ04sT0FBTyxDQUFDLGdDQUFPO0FBQUEsTUFDZixTQUFTLENBQUMsY0FBYztBQUFBLE1BQ3hCLFFBQVEsQ0FBQyxNQUFNO0FBQUEsTUFDZixPQUFPO0FBQUEsSUFDVDtBQUFBLElBQ0E7QUFBQSxNQUNFLFFBQVE7QUFBQSxNQUNSLFFBQ0U7QUFBQSxNQUNGLFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLE1BQU07QUFBQSxNQUNOLE9BQU8sQ0FBQyxnQ0FBTztBQUFBLE1BQ2YsU0FBUyxDQUFDLGdCQUFnQixZQUFZO0FBQUEsTUFDdEMsUUFBUSxDQUFDLE1BQU07QUFBQSxNQUNmLE9BQU87QUFBQSxJQUNUO0FBQUEsRUFDRjtBQUNGO0FBRUEsSUFBTyxlQUFRO0FBQUE7QUFBQSxFQUViO0FBQUEsSUFDRSxLQUFLO0FBQUE7QUFBQSxJQUNMLFFBQVE7QUFBQTtBQUFBLElBQ1IsVUFBVSxDQUFDLEVBQUUsS0FBSyxNQUFNO0FBRXRCLFlBQU0sRUFBRSxVQUFVLFNBQVMsSUFBSTtBQUUvQixZQUFNLFlBQVksZUFBZSxFQUFFO0FBQUEsUUFDakMsQ0FBQyxTQUFTLEtBQUssYUFBYSxZQUFZLEtBQUssYUFBYTtBQUFBLE1BQzVEO0FBRUEsVUFBSSxDQUFDLFdBQVc7QUFDZCxlQUFPLEVBQUUsTUFBTSxLQUFLLE1BQU0sRUFBRSxTQUFTLHlEQUFZLEVBQUU7QUFBQSxNQUNyRDtBQUVBLFlBQU0sRUFBRSxNQUFNLElBQUk7QUFDbEIsYUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsTUFBTSxFQUFFO0FBQUEsSUFDdEM7QUFBQSxFQUNGO0FBQUE7QUFBQSxFQUVBO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLENBQUMsWUFBWTtBQUVyQixZQUFNLFFBQVEsUUFBUSxRQUFRO0FBRTlCLFlBQU0sWUFBWSxlQUFlLEVBQUUsS0FBSyxDQUFDLFNBQVMsS0FBSyxVQUFVLEtBQUs7QUFFdEUsVUFBSSxDQUFDLFdBQVc7QUFDZCxlQUFPLEVBQUUsTUFBTSxLQUFLLE1BQU0sRUFBRSxTQUFTLG1EQUFXLEVBQUU7QUFBQSxNQUNwRDtBQUVBLGFBQU8sRUFBRSxNQUFNLEtBQUssTUFBTSxFQUFFLFVBQVUsRUFBRTtBQUFBLElBQzFDO0FBQUEsRUFDRjtBQUNGOyIsCiAgIm5hbWVzIjogW10KfQo=
